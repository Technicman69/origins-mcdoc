use ::java::util::text::Keybind

use ::java::util::text::TextBase
use ::java::util::text::NormalText
use ::java::util::text::TranslatedText
use ::java::util::text::ScoreText
use ::java::util::text::SelectorText
use ::java::util::text::BlockNbtText
use ::java::util::text::EntityNbtText
use ::java::util::text::StorageNbtText

type Text = (
	string |
	TextObject |
	[Text] |
)

type TextObject = (
	NormalText |
	TranslatedText |
	ScoreText |
	SelectorText |
	struct KeybindText {
		keybind: Key,
		#[since="1.20.3"]
		type?: "keybind",
		...TextBase,
	} |
	BlockNbtText |
	EntityNbtText |
	StorageNbtText |
)

type Key = (
    AnyKeybind |
    struct KeyType {
        key: AnyKeybind,
        /// Determines how the keybinding behaves when the key is held down. If set to false, the power will activate only once when the key is first pressed. If set to true, the power will try to activate continuously as long as the key is held down, accounting for any cooldown or conditions the power may have.
        continuous?: boolean,
    }
)

type AnyKeybind = (
    Keybind |
    OriginKeybind |
)

enum(string) OriginKeybind {
    PrimaryActive = "key.origins.primary_active",
    SecondaryActive = "key.origins.secondary_active",
    ViewOrigin = "key.origins.view_origin",
}